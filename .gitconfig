[core]
	editor		= nano
	fileMode	= false
	ignorecase	= false
[user]
	name	= Nace Logar
[commit]
	gpgsign = true
[push]
	default = current
[pager]
	branch 	= false
[alias]
	patch   = "!f() { git dic > ${1-diff}.patch; }; f"
	chkr	= "!f() { git checkout -b $1 ${2:-origin}/$1; }; f"
	ff		= "!f() { git merge --ff-only origin/${1:-NO_SOURCE_BRANCH}; }; f"
	cmres	= reset HEAD~
	stco 	= "!f() { git --no-pager diff --oneline --shortstat ${1:-NO_SOURCE_BRANCH}; }; f"
	discard = "!f() { git add . && git stash && git stash drop stash@{0}; }; f"
	brdres 	= "!f() { git reset --hard origin/${1:-NO_SOURCE_BRANCH}; }; f"
	sta 	= stash
	stad 	= stash drop stash@{0}
	lg   	= log --graph --pretty='format:%C(yellow)%h%C(reset) -%C(red)%d%C(reset) %s %C(green)(%cr)%C(reset) - author: %C(bold blue)%an <%ae>%C(reset), commiter: %C(bold blue)%cn <%ce>%C(reset) - %C(cyan)%GS%C(reset) %C(cyan)(%G?)%C(reset)'
	lgs 	= log --graph --all  --decorate --oneline
	today	= !git log --reflog --since yesterday --author $(git config user.email) --pretty='format:%C(green)%cd%C(reset) %C(red)%h%C(reset) %s'
	worklog = !git log --reflog --author $(git config user.email) --pretty='format:%C(green)%cd%C(reset) %C(red)%h%C(reset) %s'
	chlog 	= log --color --graph --pretty=format:'-%C(yellow)%d%Creset %s' --abbrev-commit
	latest 	= for-each-ref --sort=-committerdate refs/heads refs/remotes --format='%(color:green)%(committerdate:iso8601)%(color:reset) %(color:red)%(refname:short)%(color:reset) %(color:cyan)%(authorname)%(color:reset)'
	sig		= verify-commit HEAD
	stsig	= !echo G - valid, B - invalid, U - Unknown, X - good and expired, Y - good and expired key, R - good and revoked key, E - cannot be checked, N - no signature
	fap  	= fetch --all --prune --progress --tags
	alias 	= !git config --get-regexp ^alias\\. | sed -e s/^alias\\.// -e s/\\ /\\ =\\ /
[gpg]
	program = {{GPG_EXECUTABLE}}
