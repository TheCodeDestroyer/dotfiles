#SYSTEM

function update-system {
  local OS_TYPE=$(uname -s)

  if [[ "${OS_TYPE}" == "Darwin" ]]; then
      brew update && brew upgrade;

      sheldon lock --update;

      bin-update; nvm-update; node-update
  elif [[ "${OS_TYPE}" == "Linux" ]]; then
      adg -y && adu -y;
      
      cargo install sheldon && sheldon lock --update;

      sheldon completions --shell zsh > ${ZSH_CACHE_DIR}/completions/_sheldon

      bin-update; nvm-update; node-update
  else
      echo "Unsuported system!"
  fi
}


# CLI AUTH

function auth-npm
{
  echo "//registry.npmjs.org/:_authToken=$(op run --no-masking -- printenv NPM_AUTH_TOKEN)" >> ~/.npmrc
}

function auth-yarn
{
  { echo $(op run --no-masking -- printenv NPM_USERNAME); echo $(op run --no-masking -- printenv NPM_EMAIL); } | yarn login
}

function auth-docker
{
  echo $(op run --no-masking -- printenv DOCKER_AUTH_TOKEN) | docker login --username thecodedestroyer --password-stdin
}


#DOCKER


function docker-remove-all-containers
{
  docker rm -f $(docker ps -a -q)
}

function docker-remove-all-images
{
  docker rmi -f $(docker images -q)
}

function docker-remove-all-services
{
  docker service rm $(docker service ls -q)
}

function docker-remove-dangling-volumes
{
  docker volume rm $(docker volume ls -q -f dangling=true)
}

function docker-remove-all-secrets
{
  docker secret rm $(docker secret ls -q)
}

function docker-remove-all-configs
{
  docker config rm $(docker config ls -q)
}

function docker-clean-everything
{
  docker-remove-all-services
  docker-remove-all-containers
  docker-remove-all-images
  docker-remove-dangling-volumes
  docker-remove-all-secrets
  docker-remove-all-configs
}
